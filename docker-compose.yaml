services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"

  crawler:
    build:
      context: crawler
      dockerfile: Dockerfile
    environment:
      - RUST_LOG=info
    depends_on:
      - backend

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend

  indexer:
    build:
      context: indexer
      dockerfile: Dockerfile
    environment:
      - RUST_LOG=info
    depends_on:
      - backend

  search-core:
    build:
      context: search-core
      dockerfile: Dockerfile
    environment:
      - RUST_LOG=info

  postgres:
    image: postgres:15
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:8
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./db/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - backend
      - crawler
      - indexer
      - search-core
      - postgres-exporter
      - redis-exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres-exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres:5432/postgres?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    command: ["--redis.addr=redis:6379"]
    depends_on:
      - redis

volumes:
  pgdata:
  rabbitmq_data:
  redis_data:
  prometheus_data:
  grafana_data:
